//
//  CubeData.h
//  capture-client
//
//  Created by Gareth Cross on 2013-09-24.
//  Copyright (c) 2013 gareth. All rights reserved.
//

#ifndef capture_client_CubeData_h
#define capture_client_CubeData_h

float cube_vertices[] = {   1, 1, 1,  -1, 1, 1,  -1,-1, 1,      // v0-v1-v2 (front)
                        -1,-1, 1,   1,-1, 1,   1, 1, 1,      // v2-v3-v0
                        
                        1, 1, 1,   1,-1, 1,   1,-1,-1,      // v0-v3-v4 (right)
                        1,-1,-1,   1, 1,-1,   1, 1, 1,      // v4-v5-v0
                        
                        1, 1, 1,   1, 1,-1,  -1, 1,-1,      // v0-v5-v6 (top)
                        -1, 1,-1,  -1, 1, 1,   1, 1, 1,      // v6-v1-v0
                        
                        -1, 1, 1,  -1, 1,-1,  -1,-1,-1,      // v1-v6-v7 (left)
                        -1,-1,-1,  -1,-1, 1,  -1, 1, 1,      // v7-v2-v1
                        
                        -1,-1,-1,   1,-1,-1,   1,-1, 1,      // v7-v4-v3 (bottom)
                        1,-1, 1,  -1,-1, 1,  -1,-1,-1,      // v3-v2-v7
                        
                        1,-1,-1,  -1,-1,-1,  -1, 1,-1,      // v4-v7-v6 (back)
                        -1, 1,-1,   1, 1,-1,   1,-1,-1 };    // v6-v5-v4

float cube_colors[] = { 1, 0, 0,    1, 0, 0,    1, 0, 0,
                        1, 0, 0,    1, 0, 0,    1, 0, 0,
    
                        0, 1, 0,    0, 1, 0,    0, 1, 0,
                        0, 1, 0,    0, 1, 0,    0, 1, 0,
    
                        0, 0, 1,    0, 0, 1,    0, 0, 1,
                        0, 0, 1,    0, 0, 1,    0, 0, 1,
    
                        1, 1, 0,    1, 1, 0,    1, 1, 0,
                        1, 1, 0,    1, 1, 0,    1, 1, 0,
    
                        1, 0, 1,    1, 0, 1,    1, 0, 1,
                        1, 0, 1,    1, 0, 1,    1, 0, 1,
    
                        0, 1, 1,    0, 1, 1,    0, 1, 1,
                        0, 1, 1,    0, 1, 1,    0, 1, 1};

float cube_normals[]  = {   0, 0, 1,   0, 0, 1,   0, 0, 1,      // v0-v1-v2 (front)
                        0, 0, 1,   0, 0, 1,   0, 0, 1,      // v2-v3-v0
                        
                        1, 0, 0,   1, 0, 0,   1, 0, 0,      // v0-v3-v4 (right)
                        1, 0, 0,   1, 0, 0,   1, 0, 0,      // v4-v5-v0
                        
                        0, 1, 0,   0, 1, 0,   0, 1, 0,      // v0-v5-v6 (top)
                        0, 1, 0,   0, 1, 0,   0, 1, 0,      // v6-v1-v0
                        
                        -1, 0, 0,  -1, 0, 0,  -1, 0, 0,      // v1-v6-v7 (left)
                        -1, 0, 0,  -1, 0, 0,  -1, 0, 0,      // v7-v2-v1
                        
                        0,-1, 0,   0,-1, 0,   0,-1, 0,      // v7-v4-v3 (bottom)
                        0,-1, 0,   0,-1, 0,   0,-1, 0,      // v3-v2-v7
                        
                        0, 0,-1,   0, 0,-1,   0, 0,-1,      // v4-v7-v6 (back)
                        0, 0,-1,   0, 0,-1,   0, 0,-1 };    // v6-v5-v4

#endif
